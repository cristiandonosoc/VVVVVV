# FAudio -------------------------------------------------------------------------------------------

cc_library(
  name = "faudio",

  hdrs = [
    "FAudio/include/F3DAudio.h",
    "FAudio/include/FACT.h",
    "FAudio/include/FACT3D.h",
    "FAudio/include/FAPO.h",
    "FAudio/include/FAPOBase.h",
    "FAudio/include/FAPOFX.h",
    "FAudio/include/FAudio.h",
    "FAudio/include/FAudioFX.h",
  ],

  includes = [
    "FAudio/include",
    "FAudio/src",
  ],

  srcs = [
    "FAudio/src/F3DAudio.c",
    "FAudio/src/FACT.c",
    "FAudio/src/FACT3D.c",
    "FAudio/src/FACT_internal.c",
    "FAudio/src/FACT_internal.h",
    "FAudio/src/FAPOBase.c",
    "FAudio/src/FAPOFX.c",
    "FAudio/src/FAPOFX_echo.c",
    "FAudio/src/FAPOFX_eq.c",
    "FAudio/src/FAPOFX_masteringlimiter.c",
    "FAudio/src/FAPOFX_reverb.c",
    "FAudio/src/FAudio.c",
    "FAudio/src/FAudio_internal.c",
    "FAudio/src/FAudio_internal.h",
    "FAudio/src/FAudio_internal_simd.c",
    "FAudio/src/FAudio_operationset.c",
    "FAudio/src/FAudio_platform_sdl2.c",
    "FAudio/src/FAudio_platform_win32.c",
    "FAudio/src/FAudioFX_reverb.c",
    "FAudio/src/FAudioFX_volumemeter.c",
    "FAudio/src/matrix_defaults.inl",
    "FAudio/src/stb.h",
    "FAudio/src/stb_vorbis.h",
    "FAudio/src/XNA_Song.c",
  ],

  deps = [
    "//third_party:sdl2_lib",
  ],

  visibility = ["//visibility:public"],
)

# LodePNG ------------------------------------------------------------------------------------------

cc_library(
  name = "lodepng",

  srcs = [
    "lodepng/lodepng.cpp",
    "lodepng/lodepng.h",
  ],

  local_defines = [
    "LODEPNG_NO_COMPILE_ALLOCATORS",
    "LODEPNG_NO_COMPILE_DISK",
    "LODEPNG_NO_COMPILE_ENCODER",
  ],
  visibility = ["//visibility:public"],
)

# PhysFS -------------------------------------------------------------------------------------------

cc_library(
  name = "physfs",

  hdrs = [
    "physfs/src/physfs.h",
    "physfs/src/physfs_casefolding.h",
    "physfs/src/physfs_internal.h",
    "physfs/src/physfs_lzmasdk.h",
    "physfs/src/physfs_miniz.h",
    "physfs/src/physfs_platforms.h",
  ],

  includes = [
    "physfs/src",
  ],

  srcs = [
    "physfs/src/physfs.c",
    "physfs/src/physfs_archiver_7z.c",
    "physfs/src/physfs_archiver_dir.c",
    "physfs/src/physfs_archiver_grp.c",
    "physfs/src/physfs_archiver_hog.c",
    "physfs/src/physfs_archiver_iso9660.c",
    "physfs/src/physfs_archiver_mvl.c",
    "physfs/src/physfs_archiver_qpak.c",
    "physfs/src/physfs_archiver_slb.c",
    "physfs/src/physfs_archiver_unpacked.c",
    "physfs/src/physfs_archiver_vdf.c",
    "physfs/src/physfs_archiver_wad.c",
    "physfs/src/physfs_archiver_zip.c",
    "physfs/src/physfs_byteorder.c",
    "physfs/src/physfs_unicode.c",

    "physfs/extras/physfsrwops.c",
    "physfs/extras/physfsrwops.h",

    # TODO: Do correct platform definition support.
    "physfs/src/physfs_platform_windows.c",
    # "physfs/src/physfs_platform_android.c",
    # "physfs/src/physfs_platform_apple.m",
    # "physfs/src/physfs_platform_haiku.cpp",
    # "physfs/src/physfs_platform_os2.c",
    # "physfs/src/physfs_platform_posix.c",
    # "physfs/src/physfs_platform_qnx.c",
    # "physfs/src/physfs_platform_unix.c",
    # "physfs/src/physfs_platform_winrt.cpp",
  ],

  local_defines = [
    "PHYSFS_SUPPORTS_DEFAULT=0",
    "PHYSFS_SUPPORTS_ZIP=1",
  ],

  linkopts = [
    "advapi32.lib",
    "shell32.lib",
    "user32.lib",
  ],

  deps = [
    "//third_party:sdl2_lib",
  ],

  visibility = ["//visibility:public"],
)

# SDL2 ---------------------------------------------------------------------------------------------

cc_library(
  name = "sdl2_lib",
  deps = ["//third_party/sdl2/2.24.0/windows/msvc:lib"],
  visibility = ["//visibility:public"],
)

cc_library(
  name = "sdl2_main",
  deps = ["//third_party/sdl2/2.24.0/windows/msvc:main"],
  visibility = ["//visibility:public"],
)

# SDL2 Mixer ---------------------------------------------------------------------------------------

cc_library(
  name = "sdl2_mixer",
  deps = ["//third_party/sdl2_mixer/2.6.2/windows/msvc:sdl2_mixer"],
  visibility = ["//visibility:public"],
)

# Tiny XML 2 ---------------------------------------------------------------------------------------

cc_library(
  name = "tinyxml2",
  hdrs = ["tinyxml2/tinyxml2.h"],
  srcs = ["tinyxml2/tinyxml2.cpp"],
  includes = ["tinyxml2"],
  visibility = ["//visibility:public"],
)

# Utfcpp -------------------------------------------------------------------------------------------

cc_library(
  name = "utfcpp",
  hdrs = [
    "utfcpp/source/utf8.h",
  ],
  srcs = [
    "utfcpp/source/utf8/checked.h",
    "utfcpp/source/utf8/core.h",
    "utfcpp/source/utf8/cpp11.h",
    "utfcpp/source/utf8/cpp17.h",
    "utfcpp/source/utf8/unchecked.h",
  ],
  includes = ["utfcpp/source"],
  visibility = ["//visibility:public"],
)

